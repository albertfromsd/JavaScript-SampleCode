General Notes: 'this'


*************************************************
    [ BASICS ]
*************************************************
 
 - Whenever you create a function in the global context, 'this' will refer to the global window object
 - For methods defined inside an object, 'this' now refers to that object
 - However, for further nested methods inside that same object, 'this' will revert back to referencing the global window object
 - A workaround for changing 'this' values inside a nested object/method is to assign a variable to store the reference to 'this'
   - e.g. let self = this;
   - By default, even if nested inside another method where 'this' refers to the object, 
     any further nested references to 'this' will revert back to global window object by reference

*************************************************
